# Parameters for controlling the Bpilnu calculation
# C. DeTar 5 Apr 2018

ensemble:
  run: 2464f211b600m0102m0509m635
  dim: [ 24, 24, 24, 64 ]
  u0: 0.8350          # Simone 10/21/2015 (MILC code forces u0 = 1 for HISQ)
  atrue: 0.12121      # Decay constant paper arXiv 1407.3772 (In case of smearing)
  afm: '0.12'         # Subdirectory label

apelink:              # Applies only to links in point-split operators
  weight: 0.05
  iter: 20

tsrcRange:
  start: 0
  stop:  4            # DEBUG.  Normally 64.
  step:  4
  precess: 3          # For precessing the source times, based on the cfg number

randomW:
  rwNcolor: 1         # Number of random sources per time slice

KSaction:
  stride: 2           # In case we want smearing
  bc: 'antiperiodic'  # Applies to all propagators

######################################################################
# Quark parameters
######################################################################
quarks:
  qlight:
    type: KS
    mass: ['0.0102']
    naik_epsilon: ['0.']
    residual_loose:
      L2: 1e-5
      R2: 0.
    residual_fine:
      L2: 1e-9
      R2: 0.
    maxCG: 
      iters: 4000
      restarts: 5
    precision: 2

  qstrange:
    type: KS
    mass: ['0.053476']
    naik_epsilon: ['0.']
    residual_loose:
      L2: 1e-5
      R2: 0.
    residual_fine:
      L2: 1e-9
      R2: 0.
    maxCG:
      iters: 2000
      restarts: 50
    precision: 2

  qheavy:
    type: KS
    mass: ['0.6363','1.2726']
    naik_epsilon: ['-0.229787', '-0.521']
    residual_loose:
      L2: 0.
      R2: 1e-8
    residual_fine:
      L2: 0.
      R2: 1e-12
    maxCG:
      iters: 400
      restarts: 5
    precision: 2

######################################################################
# Correlators
######################################################################
# The job run is split into steps to conserve memory
# Each of the calculations is assigned a step
# This stanza controls the steps that are actually run
job:
  steprange:
    low: 0
    high: 3

######################################################################
# 2pt correlators.  Their "steps" must precede the 3pts.
# Explanation of notation below...
# The quark values are
# [ quark, source-smearing, sink-smearing ]
# 'd' = no smearing
corr2pts:
  pi:
    step: 0
    aQ: [ 'qlight', ['d'], ['d'] ]
    Q: [ 'qlight', ['d'], ['d'] ]
    correlators: &ref_corr2ptPS [
      [ 1, G5-G5, [0, 0, 0]],
      [ 1, G5-G5, [1, 0, 0]],
      [ 1, G5-G5, [1, 1, 0]],
      [ 1, G5-G5, [2, 0, 0]],
      [ 1, G5-G5, [2, 1, 1]],
      [ 1, G5-G5, [3, 0, 0]]
#      [ 1, G5-G5, [2, 2, 2]],
#      [ 1, G5-G5, [4, 0, 0]],
    ]

  K:
    step: 0
    aQ: [ 'qstrange', ['d'], ['d'] ] 
    Q: [ 'qlight', ['d'], ['d'] ]
    correlators: *ref_corr2ptPS

  # Heavy-light meson
  H:
    step: 0
    aQ: [ 'qheavy', ['d'], ['d'] ]
    Q: [ 'qlight', ['d'], ['d']]
    correlators: *ref_corr2ptPS

  # Heavy-strange meson
  Hs:
    step: 0
    aQ: [ 'qheavy', ['d'], ['d'] ]
    Q: [ 'qstrange', ['d'], ['d'] ]
    correlators: *ref_corr2ptPS

######################################################################
# 3pt correlators
# Explanation of notation below...
# The daughter quark list values are
# [ quark, source-smearing ]
# The spectator quark list values are
# [ quark, source-smearing ]
# The correlator list values are
# [ phase, gammaDaughter, gammaCurrent, momentum ]
tSnkHtopi: &ref_tSnkHtopi [ 15, 18, 20, 21 ] 
corr3pts:
  # Vector and tensor-current H-to-pi
  HV2pi:
    step: 1
    spinTasteParent: 'G5T-G5T'
    extT: *ref_tSnkHtopi
    Dq: [ 'qlight', ['d'] ]
    Pq: [ 'qheavy' ]
    Sq: [ 'qlight', ['d'] ]
    correlators: &ref_corrHLV3ptPS [
      [ -1, GT-GT,  [0, 0, 0] ],
      [ -1, GT-GT,  [1, 0, 0] ],
      [ -1, GT-GT,  [1, 1, 0] ],
      [ -1, GT-GT,  [2, 0, 0] ],
      [ -1, GT-GT,  [2, 1, 1] ],
      [ -1, GT-GT,  [3, 0, 0] ],
#      [ -1, GT-GT,  [2, 2, 2] ],
#      [ -1, GT-GT,  [4, 0, 0] ],

      [  1, GXT-GT, [1, 0, 0] ],
      [  1, GXT-GT, [1, 1, 0] ],
      [ -1, GYT-GT, [1, 1, 0] ],
      [  1, GXT-GT, [2, 0, 0] ],
      [  1, GXT-GT, [2, 1, 1] ],
      [ -1, GYT-GT, [2, 1, 1] ],
      [  1, GZT-GT, [2, 1, 1] ],
      [  1, GXT-GT, [3, 0, 0] ]
#      [  1, GXT-GT, [2, 2, 2] ],
#      [ -1, GYT-GT, [2, 2, 2] ],
#      [  1, GZT-GT, [2, 2, 2] ],
#      [  1, GXT-GT, [4, 0, 0] ]
    ]

  # Scalar density H-to-pi
  HS2pi:
    step: 1
    spinTasteParent: 'G5-G5'
    extT: *ref_tSnkHtopi
    Dq: [ 'qlight', ['d'] ]
    Pq: [ 'qheavy' ]
    Sq: [ 'qlight', ['d'] ]
    correlators: &ref_corrHLS3ptPS  [
      [  1, G1-G1,  [0, 0, 0] ],
      [  1, G1-G1,  [1, 0, 0] ],
      [  1, G1-G1,  [1, 1, 0] ],
      [  1, G1-G1,  [2, 0, 0] ],
      [  1, G1-G1,  [2, 1, 1] ],
      [  1, G1-G1,  [3, 0, 0] ]
#      [  1, G1-G1,  [2, 2, 2] ],
#      [  1, G1-G1,  [4, 0, 0] ]
    ]

  # Vector and tensor-current H-to-K
  HV2K:
    step: 2
    spinTasteParent: 'G5T-G5T'
    extT: *ref_tSnkHtopi
    Dq: [ 'qstrange', ['d'] ]
    Pq: [ 'qheavy' ]
    Sq: [ 'qlight', ['d'] ]
    correlators: *ref_corrHLV3ptPS

  # Scalar density H-to-K
  HS2K:
    step: 2
    spinTasteParent: 'G5-G5'
    extT: *ref_tSnkHtopi
    Dq: [ 'qstrange', ['d'] ]
    Pq: [ 'qheavy' ]
    Sq: [ 'qlight', ['d'] ]
    correlators: *ref_corrHLS3ptPS

  # Vector and tensor-current Hs-to-K
  HsV2K:
    step: 2
    spinTasteParent: 'G5T-G5T'
    extT: *ref_tSnkHtopi
    Dq: [ 'qlight', ['d'] ]
    Pq: [ 'qheavy' ]
    Sq: [ 'qstrange', ['d'] ]
    correlators: *ref_corrHLV3ptPS

  # Scalar density Hs-to-K
  HsS2K:
    step: 2
    spinTasteParent: 'G5-G5'
    extT: *ref_tSnkHtopi
    Dq: [ 'qlight', ['d'] ]
    Pq: [ 'qheavy' ]
    Sq: [ 'qstrange', ['d'] ]
    correlators: *ref_corrHLS3ptPS

######################################################################
# Table for converting code gamma notation to bilinear notation
# Used to construct the correlator names
corrKey:
  prefix:
    GX:  'V1'
    GY:  'V2'
    GZ:  'V3'
    GT:  'V4'
    G5:  'P5'
    GYZ: 'T23'
    GZX: 'T31'
    GXY: 'T12'
    GXT: 'T14'
    GYT: 'T24'
    GZT: 'T34'
    G5X: 'A1'
    G5Y: 'A2'
    G5Z: 'A3'
    G5T: 'A4'
    G1:  'S'


######################################################################
# Nanny parameters
######################################################################
submit:
  jobname: Bpilnu
  pbsScript: run.slurm
  walltime: "12:00:00"
  layout:
    njobs: &refNjobs 1  # Number of concurrent subjobs within a job (not supported)
    basenodes: 4        # Number of nodes in one concurrent subjob
    ppn: 12             # MPI ranks per node
    layoutSciDAC:       # Node and I/O geometry
      node: [2, 2, 3, 4]
      io: [1, 1, 1, 4]
    jobGeom: [ 1, 1, 1, 1]  # Not supported, yet

nanny:
  todofile: todo  # Ensemble series letter is included with cfg number
  maxcases: 1     # Number of cfgs to run in a single job submission
  maxqueue: 2     # Number of jobs to keep in the queue at one time
  wait: 30        # Seconds between nanny job checks

######################################################################
# MPP launch parameters
######################################################################
locale: chpc_mvapich2   # Must match one of the job launch stanzas below

launch:           # The NP string gets replaced with basenodes * ppn * njobs
  chpc_mvapich2:
    mpiparam: '-n NP'
    mpirun: 'mpirun'
    numa: ''
    jobidName: 'SLURM_JOBID'

  fnal_openmpi:
    mpiparam: '-np NP --map-by ppr:2:node'
    mpirun: '/usr/local/openmpi-1.10.0-gcc-4.8.4-cuda7/bin/mpirun'
    numa: ''
    jobidName: 'PBS_JOBID'

  fnal_mvapich:
    mpiparam: '-np NP'
    mpirun: '/usr/local/mvapich/bin/mpirun'
#    numa: '/usr/local/mvapich/bin/numa_32_mv'
    numa: '/usr/local/mvapich/bin/numa_16_mv'
    jobidName: 'PBS_JOBID'

  fnal_mvapich2:
    mpiparam: '-np NP'
    mpirun: '/usr/local/mvapich2/bin/mpirun'
    numa: '/usr/local/mvapich2/bin/numa_16_mv2'
    jobidName: 'PBS_JOBID'

  fnal_mvapich2-2.1:
    mpiparam: '-np NP -launcher rsh -launcher-exec remsh -hostfile MYHOSTFILE'
    mpirun: '/usr/local/mvapich2-2.1/bin/mpiexec.hydra'
    numa: '/usr/local/mvapich2-2.1/bin/numa_32_mv2'
    jobidName: 'PBS_JOBID'

  alcf_bgq:
    mpiparam: '-p 32 -n NP --block $COBALT_PARTNAME --verbose=INFO --envs BG_SHAREDMEMSIZE=64MB --envs PAMID_VERBOSE=1 --mapping /gpfs/mira-home/detar/mapfiles/n4096c32s448162g16161632.map :'
#    mpiparam: '-p 32 -n NP --block $COBALT_PARTNAME --verbose=INFO --envs BG_SHAREDMEMSIZE=64MB --envs PAMID_VERBOSE=1 --mapping /gpfs/mira-home/detar/mapfiles/n512c32g161688.map :'
#    mpiparam: '-p 32 -n NP --block $COBALT_PARTNAME --verbose=INFO --envs BG_SHAREDMEMSIZE=64MB --envs PAMID_VERBOSE=1 :'
    mpirun: 'runjob'
    numa: ''
    jobidName: '???'

######################################################################
# File system
######################################################################
# The file system has four parts
# These are defined by files/root below

# (1) project: Persistent files common to the entire project (usually the home file system):
#     See files.root.project below

# (2) remote: Large remote files: lattices, propagators, random source files
#     etc.  The ensemble name is appended as a subdirectory.
remoteRoot: '/lqcdproj/fermimilcheavylight/detar/Bpilnu'

# (3) archive: Smaller result files: Output correlators, logs
archiveRoot: '/project/heavylight/hisq/allHISQ

# (4) local: Staging location for run-time files.  See files/root/local below.

files:
  stream: run1
  root:
    project: '/home/detar/allHISQ'
#    local: '/scratch' # If empty, we do not stage files
    local: # If empty, we do not stage files
    # member 'remote:' is added by the ensemble script, since it depends on the ensemble ID
    # member 'archive:' is added by the ensemble script, since it depends on the ensemble ID
  wavefunction:   # Probably won't use in this project
    root: 'project'
    subdirs: ['wavefunction']
    1S: Richardson_cc_1S.ascii
  exec:
    root: 'project'
    subdirs: ['bin']
    name: 'ks_spectrum_hisq'
  latMILCv5:
    root: 'remote'
    subdirs: [ 'lat', 'v5' ]
  latCoul:
    root: 'remote'
    subdirs: [ 'lat', 'Coulomb' ]
  rand:
    root: 'remote'
    subdirs: [ 'rand' ]
       # With coherent sources we distinguish the random source file for the spectator
       # from the file for the daughter. This is done with "spectRnd".
       # We are not using coherent sources in this project.
    coherent: 'no'
  prop:
    root: 'remote'
    subdirs: [ 'prop' ]
  # The subdirectory "stream" is included automatically in the subdirectories listed below
  corr:
    root: 'archive'
    subdir: 'data'
  in:
    root: 'archive'
    subdir: 'logs'
  out:
    root: 'archive'
    subdir: 'logs'
  err:
    root: 'archive'
    subdir: 'logs'
  log:
    # The log captures script stdout and stderr
    # Not working at present, so commented out in the script.
    root: 'archive'
    subdir: 'logs'
  tar:
    root: 'archive'
    subdir: 
    list: [ 'data', 'logs' ]

tarCheck:             # For checking that the output tarball is complete
  tarEntries: 389  # FIX THESE
  tarbzip2Size: 10500000
  tarDataLines: 1331096
  tarDataWords: 3828568

######################################################################
# MILC code I/O commands for file types
######################################################################
fileCmd:
  wf:
    load: 'load_source'
  lat:
    load: 'reload_serial'
    save: 'save_serial_scidac'
  propKS:
    load: 'reload_serial_ksprop'
    save: 'save_partfile_scidac_ksprop'
  propClover:
    load: 'reload_serial_wprop'
    save: 'save_partfile_scidac_wprop'
  src:
    load: 'load_source_serial'
    save: 'save_partfile_scidac_ks_source'
  corr:
    save: 'save_corr_fnal'
