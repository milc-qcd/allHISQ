#! /bin/bash

#COBALT -A Semileptonic
#COBALT -q prod-long
####### -t (command line in spawnmultijob.py)
####### -n (command line in spawnmultijob.py)
####### --jobname (command line in spawnmultijob.py)

# Submission command must define environment variables LATS, NCASES
# qsub -n ${NODES} -t ${walltime} --jobname ${jobname} --mode script ${cobalt_script}
# --env LATS=${LATS}:NCASES=${NCASES}:NJOBS=${NJOBS}:NP=${N}

# LATS    list of cfg numbers, separated by /
# NCASES  number of cfg cases to run

umask 0022

echo "Running with LATS $LATS and NCASES $NCASES"

echo "Running on nodes"
cat ${COBALT_NODEFILE}

# Take predefined parameters from qsub command line:
if [ -n "${COBALT_PARTNAME}" ]
then
  # Get job-dependent variables
  # Unpack lists
  #  cfgs_milc=( `echo ${LATS} | sed 's|/| |g'` )
  cfgs_milc=${LATS}
  ncases=${NCASES}
  njobs=${NJOBS}
  pbsjobid=${COBALT_JOBID}
  if [ -z "${pbsjobid}" ]
  then
    pbsjobid=none
  fi
  testing=0
  prompt=0
else
  echo "Not a SLURM job.  Running in test mode."
  cfgs_milc="x.08/x.99"
  ncases=2
  njobs=2
  pbsjobid=test
  testing=1
  prompt=2
fi

#export KMP_AFFINITY="compact,granularity=fine,verbose"
#export KMP_PLACE_THREADS=54C,1T
# export OMP_NUM_THREADS=4
#export CRAY_OMP_CHECK_AFFINITY=TRUE
# export OMP_PROC_BIND=spread
# export OMP_PLACES=threads
#export THREADS_PER_CORE=1

argList="${cfgs_milc} ${ncases} ${njobs}"
scriptList="../scripts/params-allHISQ-plus.yaml ../scripts/params-launch.yaml params-ens.yaml params-machine.yaml"

echo "Removing any leftover correlators"
./purge_corrs.sh ${LATS} ${NCASES}

python ../scripts/make-allHISQ-prompts.py ${argList} ${scriptList}

if [ $? -ne 0 ]
then
    echo "Exiting because of errors in job"
    exit 1
else
#    echo "Finished with status 0. Cleaning up props and rands."
#    ./purge_props.sh ${LATS} ${NCASES}
    echo "Cleaning up symlinks."
    ./purge_symlinks.sh ${COBALT_JOBID}
    exit 0
fi

