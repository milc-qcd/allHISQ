######################################################################
# Job submission parameters
######################################################################
submit:
  jobname: allHISQ
  jobScript: run.bsub
  locale: summit 
  walltime: "12"
  layout:
    njobs: &refNjobs 1  # Number of concurrent subjobs within a job (not supported)
    basenodes: 128      # Number of nodes in one concurrent subjob
    ppn: 6              # MPI ranks per node
    layoutSciDAC:       # Node and I/O geometry
      node: [4, 4, 4, 12]  # NEEDS ANALYSIS
      io: [4, 4, 4, 2]
    jobGeom: [ 1, 1, 1, 1]  # Not supported, yet

nanny:
  todofile: todo  # Ensemble series letter is included with cfg number
  maxcases: 1     # Number of cfgs to run in a single job submission
  maxqueue: 2     # Number of jobs to keep in the queue at one time
  wait: 30        # Seconds between nanny job checks

######################################################################
# File system
######################################################################
# The file system has four parts
# These are defined by files/root below

# (1) project: Persistent files common to the entire project (usually the home file system):
#     See files.root.project below

# (2) remote: Large remote files: lattices, propagators, random source files
#     etc.  The ensemble name is appended as a subdirectory.
remoteRoot: '/ccs/home/gottlieb/scratch1/allHISQ/'

# (3) archive: Smaller result files: Output correlators, logs
archiveRoot: '/ccs/home/gottlieb/scratch1/project/heavylight/hisq/allHISQ'

# (4) local: Staging location for run-time files.  See files/root/local below.

files:
  root:
    project: '/ccs/home/gottlieb/allHISQ'
#    local: '/scratch' # If empty, we do not stage files
    local: # If empty, we do not stage files
    # member 'remote:' is added by the ensemble script, since it depends on the ensemble ID
    # member 'archive:' is added by the ensemble script, since it depends on the ensemble ID
  wavefunction:   # Probably won't use in this project
    root: 'project'
    subdirs: ['wavefunction']
    1S: Richardson_cc_1S.ascii
  exec:
    root: 'project'
    subdirs: ['bin']
    name: 'ks_spectrum_hisq'
  latMILCv5:
    root: 'remote'
    subdirs: [ 'lat', 'v5' ]
  latCoul:
    root: 'remote'
    subdirs: [ 'lat', 'Coulomb' ]
  rand:
    root: 'remote'
    subdirs: [ 'rand' ]
       # With coherent sources we distinguish the random source file for the spectator
       # from the file for the daughter. This is done with "spectRnd".
       # We are not using coherent sources in this project.
    coherent: 'no'
  prop:
    root: 'remote'
    subdirs: [ 'prop' ]
  # The subdirectory "stream" is included automatically in the subdirectories listed below
  corr:
    root: 'archive'
    subdir: 'data'
  in:
    root: 'archive'
    subdir: 'logs'
  out:
    root: 'archive'
    subdir: 'logs'
  err:
    root: 'archive'
    subdir: 'logs'
  log:
    # The log captures script stdout and stderr
    # Not working at present, so commented out in the script.
    root: 'archive'
    subdir: 'logs'
  tar:
    root: 'archive'
    subdir: 
    list: [ 'data', 'logs' ]
